{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAAA\\\\Desktop\\\\corso\\\\videogames_price_tracker\\\\vpt_fe\\\\src\\\\components\\\\dropDownCheckbox\\\\dropdownBoxCheckbox.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CheckboxInput from '../checkboxInput/checkboxInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownBoxCheckbox = _ref => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    isDropdownBoxDisplayed = \"none\",\n    leftSpaceFromWindow,\n    text = \"\",\n    addOrRemoveField = () => {}\n  } = _ref;\n  const [list, setList] = useState([]);\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    let fields = useSearchParams().get(text).split(\",\");\n    fetch(\"http://localhost:8081/\" + text).then(response => response.json()).then(responseJSON => {\n      let list = [];\n\n      for (const field of responseJSON) {\n        if (fields.includes(field)) list.push([field, true]);else list.push([field, false]);\n      }\n\n      setList(list);\n    });\n  }, \"i17OZyQ2N5qlJt2o/K9JeMQiDaI=\", true), []), \"i17OZyQ2N5qlJt2o/K9JeMQiDaI=\", true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: isDropdownBoxDisplayed,\n      left: leftSpaceFromWindow\n    },\n    className: \"dropdown-box-checkbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-box-checkbox-inner\",\n      children: list.map(item => /*#__PURE__*/_jsxDEV(CheckboxInput, {\n        item: item,\n        addOrRemoveField: addOrRemoveField,\n        text: text\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DropdownBoxCheckbox, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = DropdownBoxCheckbox;\nexport default DropdownBoxCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownBoxCheckbox\");","map":{"version":3,"names":["React","useEffect","useState","CheckboxInput","DropdownBoxCheckbox","isDropdownBoxDisplayed","leftSpaceFromWindow","text","addOrRemoveField","list","setList","fields","useSearchParams","get","split","fetch","then","response","json","responseJSON","field","includes","push","display","left","map","item"],"sources":["C:/Users/AAAA/Desktop/corso/videogames_price_tracker/vpt_fe/src/components/dropDownCheckbox/dropdownBoxCheckbox.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport CheckboxInput from '../checkboxInput/checkboxInput';\r\n\r\nconst DropdownBoxCheckbox = ({isDropdownBoxDisplayed = \"none\", leftSpaceFromWindow, text = \"\", addOrRemoveField = () => {}}) => {\r\n\r\n    const [list, setList] = useState([])\r\n\r\n    useEffect(\r\n        () => {\r\n            let fields = useSearchParams().get(text).split(\",\");\r\n\r\n            fetch(\"http://localhost:8081/\" + text)\r\n            .then(response => response.json())\r\n            .then(responseJSON => {\r\n\r\n                \r\n                let list = []\r\n    \r\n                for (const field of responseJSON) {\r\n                    if (fields.includes(field)) list.push([field, true])\r\n                    else list.push([field, false])\r\n                }\r\n\r\n                setList(list)\r\n            })\r\n        }, []\r\n    )\r\n    \r\n    return (\r\n        <div style={{display: isDropdownBoxDisplayed, left: leftSpaceFromWindow}} className=\"dropdown-box-checkbox\" >\r\n            <div className='dropdown-box-checkbox-inner'>\r\n                {list.map(item => <CheckboxInput key={item} item={item} addOrRemoveField={addOrRemoveField} text={text}/> )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropdownBoxCheckbox;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,MAAMC,mBAAmB,GAAG,QAAoG;EAAA;;EAAA;;EAAA,IAAnG;IAACC,sBAAsB,GAAG,MAA1B;IAAkCC,mBAAlC;IAAuDC,IAAI,GAAG,EAA9D;IAAkEC,gBAAgB,GAAG,MAAM,CAAE;EAA7F,CAAmG;EAE5H,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;EAEA,GAAAD,SAAS,IACL,MAAM;IAAA;;IACF,IAAIU,MAAM,GAAGC,eAAe,GAAGC,GAAlB,CAAsBN,IAAtB,EAA4BO,KAA5B,CAAkC,GAAlC,CAAb;IAEAC,KAAK,CAAC,2BAA2BR,IAA5B,CAAL,CACCS,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,YAAY,IAAI;MAGlB,IAAIV,IAAI,GAAG,EAAX;;MAEA,KAAK,MAAMW,KAAX,IAAoBD,YAApB,EAAkC;QAC9B,IAAIR,MAAM,CAACU,QAAP,CAAgBD,KAAhB,CAAJ,EAA4BX,IAAI,CAACa,IAAL,CAAU,CAACF,KAAD,EAAQ,IAAR,CAAV,EAA5B,KACKX,IAAI,CAACa,IAAL,CAAU,CAACF,KAAD,EAAQ,KAAR,CAAV;MACR;;MAEDV,OAAO,CAACD,IAAD,CAAP;IACH,CAbD;EAcH,CAlBI,yCAkBF,EAlBE,CAAT;;EAqBA,oBACI;IAAK,KAAK,EAAE;MAACc,OAAO,EAAElB,sBAAV;MAAkCmB,IAAI,EAAElB;IAAxC,CAAZ;IAA0E,SAAS,EAAC,uBAApF;IAAA,uBACI;MAAK,SAAS,EAAC,6BAAf;MAAA,UACKG,IAAI,CAACgB,GAAL,CAASC,IAAI,iBAAI,QAAC,aAAD;QAA0B,IAAI,EAAEA,IAAhC;QAAsC,gBAAgB,EAAElB,gBAAxD;QAA0E,IAAI,EAAED;MAAhF,GAAoBmB,IAApB;QAAA;QAAA;QAAA;MAAA,QAAjB;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAhCD;;IAAMtB,mB;;KAAAA,mB;AAkCN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}