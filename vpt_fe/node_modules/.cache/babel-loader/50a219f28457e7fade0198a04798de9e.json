{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AAAA\\\\Desktop\\\\corso\\\\videogames_price_tracker\\\\vpt_fe\\\\src\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport GameInlist from \"./gameInList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  let params = useParams();\n  console.log(\"query =\" + params);\n  const [previousParams, setParams] = useState(\"\");\n\n  if (params.query != previousParams) {\n    setParams(params.query);\n    getVideogames();\n  }\n\n  function getVideogames() {\n    //if (params == undefined) params = \"\";\n    fetch(\"http://localhost:8081/videogames\" + params.query).then(response => response.json()).then(responseJSON => props.setVideogames(responseJSON)); // anche qui devo sortarli\n    //  in base a come è gia il sort\n    // oppure annullo il sort\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.videogames.map(v => /*#__PURE__*/_jsxDEV(GameInlist, {\n      game: v\n    }, v.videogameId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 36\n    }, this))\n  }, void 0, false);\n};\n\n_s(Main, \"2foCaJb5odzxkpBqfz0U/FLuwW8=\", false, function () {\n  return [useParams];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useParams","React","useEffect","useState","GameInlist","Main","props","params","console","log","previousParams","setParams","query","getVideogames","fetch","then","response","json","responseJSON","setVideogames","videogames","map","v","videogameId"],"sources":["C:/Users/AAAA/Desktop/corso/videogames_price_tracker/vpt_fe/src/main.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport GameInlist from \"./gameInList\";\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    let params = useParams();\r\n    console.log(\"query =\" + params)\r\n\r\n    const [previousParams, setParams] = useState(\"\");\r\n\r\n    if (params.query != previousParams) {\r\n        setParams(params.query);\r\n        getVideogames()\r\n    }\r\n\r\n    function getVideogames() {\r\n        //if (params == undefined) params = \"\";\r\n        fetch(\"http://localhost:8081/videogames\" + params.query)\r\n        .then(response => response.json())\r\n        .then(responseJSON => props.setVideogames(responseJSON)); // anche qui devo sortarli\r\n                                                                //  in base a come è gia il sort\r\n                                                                // oppure annullo il sort\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {props.videogames.map(v => <GameInlist key={v.videogameId} game={v}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAEpB,IAAIC,MAAM,GAAGP,SAAS,EAAtB;EACAQ,OAAO,CAACC,GAAR,CAAY,YAAYF,MAAxB;EAEA,MAAM,CAACG,cAAD,EAAiBC,SAAjB,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;EAEA,IAAII,MAAM,CAACK,KAAP,IAAgBF,cAApB,EAAoC;IAChCC,SAAS,CAACJ,MAAM,CAACK,KAAR,CAAT;IACAC,aAAa;EAChB;;EAED,SAASA,aAAT,GAAyB;IACrB;IACAC,KAAK,CAAC,qCAAqCP,MAAM,CAACK,KAA7C,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,YAAY,IAAIZ,KAAK,CAACa,aAAN,CAAoBD,YAApB,CAFtB,EAFqB,CAIqC;IACF;IACA;EAC3D;;EAED,oBACI;IAAA,UACCZ,KAAK,CAACc,UAAN,CAAiBC,GAAjB,CAAqBC,CAAC,iBAAI,QAAC,UAAD;MAAgC,IAAI,EAAEA;IAAtC,GAAiBA,CAAC,CAACC,WAAnB;MAAA;MAAA;MAAA;IAAA,QAA1B;EADD,iBADJ;AAKH,CA1BD;;GAAMlB,I;UAEWL,S;;;KAFXK,I;AA4BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}